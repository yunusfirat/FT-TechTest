import Head from 'next/head'
// import Image from 'next/image'
// import styles from '../styles/Home.module.css'

export const getStaticProps = async () => {

  const requestOption = {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "X-Api-Key": "59cbaf20e3e06d3565778e7b6e0044a4fa7f43429198e666d8c855a0"
    },
    body: JSON.stringify({
      "queryString": "brexit",
      "resultContext": {
        "aspects": ["title", "lifecycle", "location", "summary", "editorial"]
      },
    }),
  }

  const response = await fetch("https://api.ft.com/content/search/v1?", requestOption)
  const data = await response.json()


  return {
    props: { headlines: data }
  }
}




import { useState } from "react"

export default function Home({ headlines }) {
  const [data, setData] = useState(headlines.results[0].results);
  const [filter, setFilter] = useState(data);
  const [search, setSearch] = useState("");
  const [nextpage, setNextpage] = useState(12);
  const [prevpage, setPrevpage] = useState(0);
  const [pageNum, setPagenum] = useState(0)
  const[currentPage,SetCurrentPage] = useState(1)
  const searchtitle = (e) => {
    setSearch(e.target.value)
    if (search) {
      setNextpage(() => 12);
      setPrevpage(() => 0);
      SetCurrentPage(1);
      setFilter(() => data.filter((news) => news.title.title.toLowerCase().includes(search.toLowerCase())))
    } else {
      console.log("no data found")
    }
  }
  const pagenitaion = (num) => {
    console.log(num)
    if (filter.length - 12 >= nextpage || nextpage !== 12) {
    setNextpage(() => 12*num);
    setPrevpage(() => 12*num - 12);
    SetCurrentPage(num);
  }
  }

  // const next = () => {
  //   if (filter.length - 12 >= nextpage) {
  //     setNextpage(() => nextpage + 12);
  //     setPrevpage(() => prevpage + 12);
  //     setPagenum(() => pageNum + 1);
  //     SetCurrentPage(() => nextpage/12 +1);
  //   }
  // }

  // const previous = () => {
  //   if (nextpage !== 12) {
  //     setNextpage(() => nextpage - 12);
  //     setPrevpage(() => prevpage - 12);
  //     setPagenum(() => pageNum - 1);
  //     SetCurrentPage(() => nextpage/12 +1);
  //   }
  // }
  
  return (
    <div className="container">
      <Head>
        <title>Financial Times</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="stylesheet" href="https://www.ft.com/__origami/service/build/v3/bundles/css?components=o-grid@^6.0.0&brand=master&system_code=$$$-no-bizops-system-code-$$$" />
        <link rel="stylesheet" href="https://www.ft.com/__origami/service/build/v3/bundles/css?components=o-grid@^6.0.0,o-colors@^6.0.8,o-typography@^7.0.2,o-table@^9.0.2&brand=master&system_code=$$$-no-bizops-system-code-$$$" />
        <link rel="stylesheet" href="https://www.ft.com/__origami/service/build/v3/bundles/css?components=o-grid@^6.0.0,o-colors@^6.0.8,o-buttons@^7.0.1,o-typography@^7.0.2,o-table@^9.0.2&brand=internal&system_code=$$$-no-bizops-system-code-$$$" />
      </Head>
      <nav>
        <div className="o-grid-container">
          <div className="o-grid-row" data-o-grid-colspan="center 8">
            <label htmlFor="search" className="o-forms-field">
            <span className="o-forms-title">
        <span className="o-forms-title__main">What you are looking for ?</span>
      </span>
              <input
                type="text"
                value={search}
                onChange={searchtitle}
                id="search" />
<span className="
          o-forms-input
          o-forms-input--text
          o-forms-input--small
          o-forms-input--suffix
        ">
            <button className="o-buttons o-buttons--primary" onClick={searchtitle}>Go</button>
            </span>
            </label>
          </div>
        </div>
      </nav>
      {/* <section>
        <div className="o-grid-container">
          <div className="o-grid-row" data-o-grid-colspan="center 8">
            <button className="o-buttons o-buttons--primary o-buttons-icon o-buttons-icon--arrow-right o-buttons--big" onClick={next}>Next Page  {pageNum > 0 ? `- ${pageNum}` : null}</button>
            <button onClick={previous}>Previous Page {pageNum > 0 ? pageNum - 1 : null}</button>
          </div>
        </div>
      </section> */}
      <section>
        <div className="o-grid-container">
          <div className="o-grid-row" data-o-grid-colspan="center 8">
            {filter.slice(prevpage, nextpage).map((news, index) => {
              const { title, summary, lifecycle, location } = news
              return (
                <div key={index} data-o-grid-colspan="S12 M3  XL3">
                  <div className="demo-container demo-container--large">
                    <div className="o-teaser o-teaser--large" data-o-component="o-teaser">
                      <div className="o-teaser__content">
                        <h4 className="o-teaser__heading">
                          {title.title}
                        </h4>

                        <p className="o-teaser__standfirst">
                          {summary.excerpt}
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              )
            })}
          </div>
        </div>
      </section>

      <section>
      <div className="o-grid-container">
          <div className="o-grid-row " data-o-grid-colspan="center 3">
      <div className="o-buttons-pagination">
      <a href="#" className="
          o-buttons o-buttons--secondary
          o-buttons-icon o-buttons-icon--arrow-left o-buttons-icon--icon-only
        " disabled>
        <span className="o-buttons-icon__label">Fewer results</span>
      </a>
      <a  className="o-buttons o-buttons--secondary" aria-current={currentPage ===1 ? "page" :null }  onClick={() => pagenitaion(1)}>1</a>
      <a  className="o-buttons o-buttons--secondary" aria-current={currentPage ===2 ? "page" :null } onClick={() => pagenitaion(2)}>2</a>
      <a href="#" className="o-buttons o-buttons--secondary" aria-current={currentPage ===3 ? "page" :null } onClick={() => pagenitaion(3)}>3</a>
      <a href="#" className="o-buttons o-buttons--secondary" aria-current={currentPage ===4 ? "page" :null } onClick={() => pagenitaion(4)}>4</a>
      <a href="#" className="o-buttons o-buttons--secondary" aria-current={currentPage ===5 ? "page" :null } onClick={() => pagenitaion(5)}>5</a>
      <a href="#" className="o-buttons o-buttons--secondary" aria-current={currentPage ===6 ? "page" :null } onClick={() => pagenitaion(6)}>6</a>
      <a href="#" className="o-buttons o-buttons--secondary" aria-current={currentPage ===7 ? "page" :null } onClick={() => pagenitaion(7)}>7</a>
      <a href="#" className="
          o-buttons o-buttons--secondary
          o-buttons-icon o-buttons-icon--arrow-right o-buttons-icon--icon-only
        " disabled>
        <span className="o-buttons-icon__label">More results</span>
      </a>
    </div>

    </div>
    </div>
      </section>
    </div>
  )
}



{/* <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div> */}